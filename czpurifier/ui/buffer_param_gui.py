from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_BuffersWindow(object):
    def __init__(self, BuffersWindow, gui_controller, protocol_buffers):
        """This window pops up when start is clicked to show the volume of 
        buffers needed and to adjust the flow rate calibration"""
        self.BuffersWindow = BuffersWindow
        self.gui_controller = gui_controller
        self.setupUi(self.BuffersWindow)
        self.initEvents(protocol_buffers)

    ### Desinger generated code ###
    def setupUi(self, BuffersWindow):
        BuffersWindow.setObjectName("BuffersWindow")
        BuffersWindow.setWindowModality(QtCore.Qt.ApplicationModal)
        BuffersWindow.resize(813, 434)
        self.centralwidget = QtWidgets.QWidget(BuffersWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.you_sure_lbl = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.you_sure_lbl.sizePolicy().hasHeightForWidth())
        self.you_sure_lbl.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(20)
        self.you_sure_lbl.setFont(font)
        self.you_sure_lbl.setObjectName("you_sure_lbl")
        self.verticalLayout.addWidget(self.you_sure_lbl)
        self.line_6 = QtWidgets.QFrame(self.centralwidget)
        self.line_6.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.verticalLayout.addWidget(self.line_6)
        self.gridLayout_2.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 3, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 2, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 5, 0, 1, 1)
        self.elution_vol = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.elution_vol.setFont(font)
        self.elution_vol.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.elution_vol.setObjectName("elution_vol")
        self.gridLayout.addWidget(self.elution_vol, 5, 2, 1, 1)
        self.load_vol = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.load_vol.setFont(font)
        self.load_vol.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.load_vol.setObjectName("load_vol")
        self.gridLayout.addWidget(self.load_vol, 3, 2, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.wash_vol = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.wash_vol.setFont(font)
        self.wash_vol.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.wash_vol.setObjectName("wash_vol")
        self.gridLayout.addWidget(self.wash_vol, 4, 2, 1, 1)
        self.base_vol = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.base_vol.setFont(font)
        self.base_vol.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.base_vol.setObjectName("base_vol")
        self.gridLayout.addWidget(self.base_vol, 2, 2, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 4, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 1, 0, 1, 1)
        self.line_3 = QtWidgets.QFrame(self.centralwidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout.addWidget(self.line_3, 1, 2, 1, 1)
        self.line_4 = QtWidgets.QFrame(self.centralwidget)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout.addWidget(self.line_4, 1, 4, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 2, 0, 1, 1)
        self.line_2 = QtWidgets.QFrame(self.centralwidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout.addWidget(self.line_2, 0, 1, 6, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setContentsMargins(-1, 10, -1, 10)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.base_fc_slider = QtWidgets.QSlider(self.centralwidget)
        self.base_fc_slider.setMinimum(-10)
        self.base_fc_slider.setMaximum(10)
        self.base_fc_slider.setOrientation(QtCore.Qt.Horizontal)
        self.base_fc_slider.setObjectName("base_fc_slider")
        self.horizontalLayout.addWidget(self.base_fc_slider)
        self.base_fc_txtbox = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.base_fc_txtbox.sizePolicy().hasHeightForWidth())
        self.base_fc_txtbox.setSizePolicy(sizePolicy)
        self.base_fc_txtbox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.base_fc_txtbox.setObjectName("base_fc_txtbox")
        self.horizontalLayout.addWidget(self.base_fc_txtbox)
        self.gridLayout.addLayout(self.horizontalLayout, 2, 4, 1, 1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setContentsMargins(-1, 10, -1, 10)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.elution_fc_slider = QtWidgets.QSlider(self.centralwidget)
        self.elution_fc_slider.setMinimum(-10)
        self.elution_fc_slider.setMaximum(10)
        self.elution_fc_slider.setOrientation(QtCore.Qt.Horizontal)
        self.elution_fc_slider.setObjectName("elution_fc_slider")
        self.horizontalLayout_4.addWidget(self.elution_fc_slider)
        self.elution_fc_txtbox = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.elution_fc_txtbox.sizePolicy().hasHeightForWidth())
        self.elution_fc_txtbox.setSizePolicy(sizePolicy)
        self.elution_fc_txtbox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.elution_fc_txtbox.setObjectName("elution_fc_txtbox")
        self.horizontalLayout_4.addWidget(self.elution_fc_txtbox)
        self.gridLayout.addLayout(self.horizontalLayout_4, 5, 4, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(-1, 10, -1, 10)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.load_fc_slider = QtWidgets.QSlider(self.centralwidget)
        self.load_fc_slider.setMinimum(-10)
        self.load_fc_slider.setMaximum(10)
        self.load_fc_slider.setOrientation(QtCore.Qt.Horizontal)
        self.load_fc_slider.setObjectName("load_fc_slider")
        self.horizontalLayout_2.addWidget(self.load_fc_slider)
        self.load_fc_txtbox = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.load_fc_txtbox.sizePolicy().hasHeightForWidth())
        self.load_fc_txtbox.setSizePolicy(sizePolicy)
        self.load_fc_txtbox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.load_fc_txtbox.setObjectName("load_fc_txtbox")
        self.horizontalLayout_2.addWidget(self.load_fc_txtbox)
        self.gridLayout.addLayout(self.horizontalLayout_2, 3, 4, 1, 1)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(-1, 10, -1, 10)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.wash_fc_slider = QtWidgets.QSlider(self.centralwidget)
        self.wash_fc_slider.setMinimum(-10)
        self.wash_fc_slider.setMaximum(10)
        self.wash_fc_slider.setOrientation(QtCore.Qt.Horizontal)
        self.wash_fc_slider.setObjectName("wash_fc_slider")
        self.horizontalLayout_3.addWidget(self.wash_fc_slider)
        self.wash_fc_txtbox = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.wash_fc_txtbox.sizePolicy().hasHeightForWidth())
        self.wash_fc_txtbox.setSizePolicy(sizePolicy)
        self.wash_fc_txtbox.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.wash_fc_txtbox.setObjectName("wash_fc_txtbox")
        self.horizontalLayout_3.addWidget(self.wash_fc_txtbox)
        self.gridLayout.addLayout(self.horizontalLayout_3, 4, 4, 1, 1)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_6.addWidget(self.label_3)
        self.flow_rate_cor_question = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.flow_rate_cor_question.sizePolicy().hasHeightForWidth())
        self.flow_rate_cor_question.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.flow_rate_cor_question.setFont(font)
        self.flow_rate_cor_question.setObjectName("flow_rate_cor_question")
        self.horizontalLayout_6.addWidget(self.flow_rate_cor_question)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        self.gridLayout.addLayout(self.horizontalLayout_6, 0, 4, 1, 1)
        self.line_5 = QtWidgets.QFrame(self.centralwidget)
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout.addWidget(self.line_5, 0, 3, 6, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem1)
        self.start_btn = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.start_btn.setFont(font)
        self.start_btn.setObjectName("start_btn")
        self.horizontalLayout_7.addWidget(self.start_btn)
        self.cancel_btn = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.cancel_btn.setFont(font)
        self.cancel_btn.setObjectName("cancel_btn")
        self.horizontalLayout_7.addWidget(self.cancel_btn)
        self.gridLayout_2.addLayout(self.horizontalLayout_7, 3, 0, 1, 1)
        self.line_7 = QtWidgets.QFrame(self.centralwidget)
        self.line_7.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.gridLayout_2.addWidget(self.line_7, 2, 0, 1, 1)
        BuffersWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(BuffersWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 813, 22))
        self.menubar.setObjectName("menubar")
        BuffersWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(BuffersWindow)
        self.statusbar.setObjectName("statusbar")
        BuffersWindow.setStatusBar(self.statusbar)

        self.retranslateUi(BuffersWindow)
        QtCore.QMetaObject.connectSlotsByName(BuffersWindow)

    def retranslateUi(self, BuffersWindow):
        _translate = QtCore.QCoreApplication.translate
        BuffersWindow.setWindowTitle(_translate("BuffersWindow", "Buffer Parameters"))
        self.you_sure_lbl.setText(_translate("BuffersWindow", "Fine tuning some parameters before starting"))
        self.label_5.setText(_translate("BuffersWindow", "LOAD_BUFFER"))
        self.label_2.setText(_translate("BuffersWindow", "Volume Needed (mL)"))
        self.label_7.setText(_translate("BuffersWindow", "ELUTION"))
        self.elution_vol.setText(_translate("BuffersWindow", "TextLabel"))
        self.load_vol.setText(_translate("BuffersWindow", "TextLabel"))
        self.label.setText(_translate("BuffersWindow", "Buffers"))
        self.wash_vol.setText(_translate("BuffersWindow", "TextLabel"))
        self.base_vol.setText(_translate("BuffersWindow", "TextLabel"))
        self.label_6.setText(_translate("BuffersWindow", "WASH"))
        self.label_4.setText(_translate("BuffersWindow", "BASE"))
        self.base_fc_txtbox.setInputMask(_translate("BuffersWindow", "###"))
        self.elution_fc_txtbox.setInputMask(_translate("BuffersWindow", "###"))
        self.load_fc_txtbox.setInputMask(_translate("BuffersWindow", "###"))
        self.wash_fc_txtbox.setInputMask(_translate("BuffersWindow", "###"))
        self.label_3.setText(_translate("BuffersWindow", "Flow Rate Correction Factor (%)"))
        self.flow_rate_cor_question.setText(_translate("BuffersWindow", "?"))
        self.start_btn.setText(_translate("BuffersWindow", "START"))
        self.cancel_btn.setText(_translate("BuffersWindow", "CANCEL"))

    ## End of designer generated code ##
    def initEvents(self, protocol_buffers):
        """Initializes all on click actions"""
        self.sliders = [self.base_fc_slider, self.load_fc_slider, self.wash_fc_slider, self.elution_fc_slider]
        self.fc_txtbox = [self.base_fc_txtbox, self.load_fc_txtbox, self.wash_fc_txtbox, self.elution_fc_txtbox]
        self.updateDefaultFC()
        self.base_fc_slider.valueChanged.connect(lambda: self.slider_changed(0))
        self.load_fc_slider.valueChanged.connect(lambda: self.slider_changed(1))
        self.wash_fc_slider.valueChanged.connect(lambda: self.slider_changed(2))
        self.elution_fc_slider.valueChanged.connect(lambda: self.slider_changed(3))

        self.start_btn.clicked.connect(lambda: self.onclickStartCancel(True))
        self.cancel_btn.clicked.connect(lambda: self.onclickStartCancel(False))
        self.flow_rate_cor_question.clicked.connect(self.onclickDefineFC)

        self.updateBuffersNeeded(protocol_buffers)
        
    def slider_changed(self, indx):
        """Updates text label beside the slider when slider is moved"""
        self.fc_txtbox[indx].setText('{}'.format(self.sliders[indx].value()))

    def onclickStartCancel(self, is_start):
        """Handles when start or cancel is clicked"""
        close = True
        if is_start:
            if self.gui_controller.checkEmptyQLines(self.fc_txtbox):
                self.gui_controller.setFlowCorrection(self.retriveFC())
            else: 
                is_start = False
                close = False
        self.gui_controller.is_sure = is_start
        if close:
            self.BuffersWindow.close()
    
    def retriveFC(self):
        """Get the final values for the percentage correction for each buffer"""
        return {'BASE': int(self.base_fc_txtbox.text()), 'LOAD_BUFFER': int(self.load_fc_txtbox.text()),
                'WASH': int(self.wash_fc_txtbox.text()), 'ELUTION': int(self.elution_fc_txtbox.text())}

    def onclickDefineFC(self):
        """Pops up a message to describe what the flow rate correction value should be"""
        msg = QtWidgets.QMessageBox()
        msg.setText("Flow Rate Correction = (Actual Flow Rate - Expected Flow Rate)*100")
        msg.setInformativeText('To determine the correction factor, ' 
        'run an experiment using the Custom Protol Window that outputs N mLs of buffer'
        ' and weigh the buffer to determine the real volume that was pumped.\n\n'
        'Expected Flow Rate = 1ml/min or 5ml/min for 1ml columns or 5ml columns respectively')
        msg.setIcon(QtWidgets.QMessageBox.Information)
        msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
        msg.exec()
    
    def updateBuffersNeeded(self, protocol_buffers):
        """Displays the vol of each buffer needed"""
        total_buffers = self.gui_controller.buffer_needed(protocol_buffers)
        self.base_vol.setText('{}'.format(total_buffers['BASE']))
        self.load_vol.setText('{}'.format(total_buffers['LOAD_BUFFER']))
        self.wash_vol.setText('{}'.format(total_buffers['WASH']))
        self.elution_vol.setText('{}'.format(total_buffers['ELUTION']))

    def updateDefaultFC(self):
        """Displays the default flow rate correction % on start"""
        i = 0
        for t,s in zip(self.fc_txtbox, self.sliders):
            t.setText('{}'.format(self.gui_controller.default_buffer_fc[i]))
            s.setValue(self.gui_controller.default_buffer_fc[i])
            i += 1